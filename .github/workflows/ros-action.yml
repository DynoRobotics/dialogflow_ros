name: Noetic Ubuntu 20.04

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      ROS_CI_DESKTOP: "`lsb_release -cs`"  # e.g. [trusty|xenial|...]
      ROS_DISTRO: noetic
    steps:
      - uses: actions/checkout@v2
      - name: Install Non-ROS Dependencies
        run: |
          ls -l $GITHUB_WORKSPACE
          python --version
          python -m pip install --upgrade pip
          pip install flake8 pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install ROS
        run: |
            sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
            sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
            sudo apt-get update -qq
            sudo apt-get install dpkg
            sudo apt-get install -y python3-catkin-pkg
            sudo apt-get install -y python3-catkin-tools
            sudo apt-get install -y python3-osrf-pycommon
            sudo apt-get install -y python3-rosdep
            sudo apt-get install -y python3-wstool
            sudo apt-get install -y ros-cmake-modules
            sudo apt-get install -y ros-$ROS_DISTRO-catkin
            source /opt/ros/$ROS_DISTRO/setup.bash
      - name: Install ROS packages with rosdep
        run: |
          source /opt/ros/$ROS_DISTRO/setup.bash
          sudo rosdep init
          rosdep update
          mkdir -p ~/catkin_ws/src
          ln -s $GITHUB_WORKSPACE ~/catkin_ws/src/dialogflow_ros
          cd ~/catkin_ws
          rosdep install --from-paths src --ignore-src -r -s  # do a dry-run first
          rosdep install --from-paths src --ignore-src -r -y
      - name: catkin build
        run: |
          source /opt/ros/$ROS_DISTRO/setup.bash
          cd ~/catkin_ws
          catkin build --no-status
          source devel/setup.bash
      - name: roslint
        run: |
          cd ~/catkin_ws
          catkin build dialogflow_ros --no-deps --catkin-make-args roslint
      - name: Lint with flake8
        run: |
          cd ~/catkin_ws/src/dialogflow_ros/nodes
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Analysing the code with pylint
        run: |
          source ~/catkin_ws/devel/setup.bash
          cd ~/catkin_ws/src/dialogflow_ros/nodes
          pylint --fail-under=10 `find -regextype egrep -regex '(.*.py)$'` | tee $GITHUB_WORKSPACE/pylint.txt
      - name: Upload pylint.txt as artifact
        uses: actions/upload-artifact@v2
        with:
          name: pylint report
          path: pylint.txt
